const { 
  testValidation, 
  testAuthentication, 
  testLogin, 
  makeRequest 
} = require('./utils/test-helper');

async function testAuthAPI() {
  console.log('üß™ Testando API de Autentica√ß√£o...\n');

  try {
    // Teste 1: Valida√ß√£o de dados de entrada
    console.log('1Ô∏è‚É£ Testando valida√ß√µes de entrada...');
    
    // Teste de senha muito curta
    await testValidation('/auth/login', {
      email: 'teste@exemplo.com',
      senha: '123'
    });

    // Teste de email inv√°lido
    await testValidation('/auth/login', {
      email: 'email-invalido',
      senha: 'Senha123'
    });

    // Teste 2: Login com usu√°rio inexistente
    console.log('\n2Ô∏è‚É£ Testando login com usu√°rio inexistente...');
    await testLogin('usuario@inexistente.com', 'Senha123', false);

    // Teste 3: Prote√ß√£o de rotas autenticadas
    console.log('\n3Ô∏è‚É£ Testando prote√ß√£o de rotas...');
    
    // Teste sem token
    await testAuthentication('/auth/validate');
    
    // Teste com token inv√°lido
    await testAuthentication('/auth/validate', 'token-invalido');

    // Teste 4: Valida√ß√£o de altera√ß√£o de senha
    console.log('\n4Ô∏è‚É£ Testando valida√ß√£o de altera√ß√£o de senha...');
    
    // Teste sem autentica√ß√£o
    await testValidation('/auth/change-password', {
      senhaAtual: '123',
      novaSenha: 'NovaSenha123'
    }, 401);

    console.log('\nüéâ Todos os testes de valida√ß√£o e prote√ß√£o passaram!');
    console.log('\nüìù Para testar com usu√°rio real:');
    console.log('   1. Tenha um usu√°rio na tabela usuarios');
    console.log('   2. Execute: node tests/auth.test.js --real-user');
    console.log('   3. Configure as credenciais no arquivo de teste');

  } catch (error) {
    console.error('‚ùå Erro geral:', error.message);
  }
}

// Verificar se deve testar com usu√°rio real
if (process.argv.includes('--real-user')) {
  console.log('üîê Testando com usu√°rio real...\n');
  
  // Aqui voc√™ pode configurar um usu√°rio real para teste
  const realUserTest = async () => {
    try {
      // Substitua pelos dados de um usu√°rio real
      const email = 'usuario@real.com';
      const senha = 'SenhaReal123';
      
      console.log('1Ô∏è‚É£ Testando login com usu√°rio real...');
      const token = await testLogin(email, senha, true);
      
      if (token) {
        console.log('\n2Ô∏è‚É£ Testando valida√ß√£o de token...');
        await testAuthentication('/auth/validate', token);
        
        console.log('\n3Ô∏è‚É£ Testando altera√ß√£o de senha...');
        const changeResult = await makeRequest('POST', '/auth/change-password', {
          senhaAtual: senha,
          novaSenha: 'NovaSenha456'
        }, { 'Authorization': `Bearer ${token}` });
        
        if (changeResult.success) {
          console.log('‚úÖ Altera√ß√£o de senha funcionando');
        } else {
          console.log('‚ùå Erro na altera√ß√£o de senha:', changeResult.data.message);
        }
      }
      
    } catch (error) {
      console.error('‚ùå Erro no teste com usu√°rio real:', error.message);
    }
  };
  
  realUserTest();
} else {
  testAuthAPI();
} 